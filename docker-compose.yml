version: '3.8'

services:
  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: decodeat-chromadb
    ports:
      - "8001:8000"  # ChromaDB 포트 (FastAPI와 충돌 방지)
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    networks:
      - decodeat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FastAPI Application
  decodeat-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: decodeat-api
    ports:
      - "8000:8000"  # FastAPI 포트
    environment:
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-key.json
      - DEBUG=false
    volumes:
      - ./gcp-key.json:/app/gcp-key.json:ro
    depends_on:
      chromadb:
        condition: service_healthy
    networks:
      - decodeat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis Cache (Optional - for future scaling)
  redis:
    image: redis:7-alpine
    container_name: decodeat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - decodeat-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  chromadb_data:
    driver: local
  redis_data:
    driver: local

networks:
  decodeat-network:
    driver: bridge